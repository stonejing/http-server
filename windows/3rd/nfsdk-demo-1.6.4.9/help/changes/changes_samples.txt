- Several fixes in SocksRedirector code.

- Added a new option OT_UDP_REDIRECT_ADDRESS for SocksRedirectorNet sample, allowing to redirect UDP datagrams via proxy server to specified address. 
For example it is possible to redirect local DNS requests to a remote server.

- Added SocksRedirectorWindows8 sample, redirecting TCP connections in WFP driver using NF_REDIRECT flag.

- Added a demonstration of WebSocket filtering to PFDump, PFNetFilter and PFNetFilterCS.

- Fixed the functions returning process name in Delphi API code.

- Added a sample PFHttpRedirector.

- Fixed bugs in nfapinet.cs.

- Added BindRedirect sample demonstrating redirection of routing for TCP/UDP sockets.

- Added samples SocksProxyServer and SocksRedirector.

- C# projects nfapinet and pfapinet are removed. The API files are moved to include folder, and included to projects by link.

- Added TrafficShaperWFP samples demonstrating limiting and counting traffic using flow control contexts with WFP driver.

- HTTP filtering samples block QUIC and SPDY protocols.

- Fixed an issue in TcpRedirector sample with WFP driver. TCP WFP layer doesn't allow injecting outgoing packets until the socket owner process sends a first packet via connection. 
It is necessary to take this into account in case if a filter needs to send something before other packets.

- Added C# sample TrafficShaperCS.

- In C# API for ProtocolFilters pfapinet the class for storing headers NameValueCollection is replaced with PFHeader. The new class is a list of string pairs, allowing to store several fields with the same key.

- Delphi\NetRedirector is modified to allow redirecting DNS requests to local proxies with WFP driver.

- DnsRedirector is modified to allow redirecting to local proxies with WFP driver.

- To redirect TCP connections to a local proxy using WFP it is necessary to specify process id of the proxy in NF_TCP_CONN_INFO.processId field from tcpConnectRequest event.
The samples TcpRedirector and TcpRedirectorCS are updated accordingly.

- .NET API is rewritten in C#. The new nfapinet and pfapinet don't link with MSVC runtime, thus MSVC redistributable is not required.
The new .NET wrappers use nfapi.dll and ProtocolFilters.dll with C interface, so the binaries are copied to *_c_api folders.

- DnsRedirector and Delphi\NetRedirector are updated to support both TDI and WFP driver.

- pf_setRootSSLCertSubject is called explicitly to specify root certificate name 
and add it to certificate storages.

- Added anonymous SOCKS4 proxy support to TcpRedirector and TcpRedirectorCS.